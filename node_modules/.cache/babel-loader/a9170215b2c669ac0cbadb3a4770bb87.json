{"ast":null,"code":"var _jsxFileName = \"/Users/jimmy70637/Desktop/react_works/Toaru/src/components/QuestionItems.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { questionData } from '../data';\nimport { GiClick } from \"react-icons/gi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuestionItems = () => {\n  _s();\n\n  const [showInfo, setShowInfo] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"question\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionContainer\",\n      children: questionData.map(questionItem => {\n        const {\n          id,\n          question,\n          answer\n        } = questionItem;\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"questionItem\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"questionItem_q\",\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowInfo(!showInfo),\n            children: /*#__PURE__*/_jsxDEV(GiClick, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 70\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), showInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 39\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuestionItems, \"K8/QabQlSKbD9Xsjl3kZ1JGckSc=\");\n\n_c = QuestionItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionItems\");","map":{"version":3,"sources":["/Users/jimmy70637/Desktop/react_works/Toaru/src/components/QuestionItems.jsx"],"names":["React","useState","questionData","GiClick","QuestionItems","showInfo","setShowInfo","map","questionItem","id","question","answer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAGA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,sBACI;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACEC,YAAY,CAACK,GAAb,CAAkBC,YAAD,IAAgB;AAC/B,cAAM;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,QAAN;AAAgBC,UAAAA;AAAhB,YAA2BH,YAAjC;AACA,4BACI;AAAkB,UAAA,SAAS,EAAC,cAA5B;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,gBAAhB;AAAA,sBAAkCE;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,OAAO,EAAE,MAAIJ,WAAW,CAAC,CAACD,QAAF,CAAhC;AAAA,mCAA6C,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGMA,QAAQ,iBAAI;AAAA,sBAAIM;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAHlB;AAAA,WAAcF,EAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OAVC;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAtBM;;GAAML,a;;KAAAA,a","sourcesContent":["import React, { useState } from 'react';\nimport { questionData } from '../data'\nimport { GiClick } from \"react-icons/gi\";\n\n\nexport const QuestionItems = () => {\n    const [ showInfo, setShowInfo ] = useState(false)\n    return ( \n        <section className=\"question\">\n            <h1>Question</h1>\n            <div className=\"questionContainer\">\n            { questionData.map((questionItem)=>{\n                const { id, question, answer } = questionItem;\n                return(\n                    <article key={id} className=\"questionItem\">\n                        <span className=\"questionItem_q\">{question}</span>\n                        <button onClick={()=>setShowInfo(!showInfo)}><GiClick /></button>\n                        { showInfo && <p>{answer}</p> }\n\n                    </article>\n                )\n            })\n\n            }\n            </div>\n        </section>\n    );\n}"]},"metadata":{},"sourceType":"module"}